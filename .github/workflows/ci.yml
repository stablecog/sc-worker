name: Build and Publish Worker

on:
  push:
    tags:
      - "release*"
concurrency:
  group: workflow-${{ github.workflow }}
  cancel-in-progress: true
jobs:
  setup_env:
    name: ⚙️ Setup environment
    runs-on: ubuntu-latest
    steps:
      - name: Add SHORT_SHA env property
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA::7}`" >> $GITHUB_ENV

      - name: Put commit msg in environment
        run: echo "COMMIT_MSG=${{ github.event.head_commit.message }}" >> $GITHUB_ENV

      - name: Escape commit message
        run: |
          echo "COMMIT_MSG=$(echo $COMMIT_MSG | tr -d \'\\\")" >> $GITHUB_ENV

      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

    outputs:
      short_sha: ${{ env.SHORT_SHA }}
      commit_msg: ${{ env.COMMIT_MSG }}
      branch_name: ${{ env.BRANCH_NAME }}

  build_and_publish_worker:
    name: Build and Publish Worker
    runs-on: [ubuntu-latest]
    needs:
      - setup_env
    env:
      GITHUB_RUN_ID: ${{ github.run_id }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Delete huge unnecessary tools folder
        run: rm -rf /opt/hostedtoolcache

      - uses: actions/checkout@master
        with:
          ref: master

      - name: Login to Docker Hub
        if: success()
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build & Push to Docker Hub
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: |
            stablecog/sc-worker:${{ needs.setup_env.outputs.branch_name }}-${{ env.GITHUB_RUN_ID }}
            stablecog/sc-worker:latest
            stablecog/sc-worker:auto-vram

      - name: Cleanup Docker Junk
        if: success()
        run: |
          docker rmi -f $(docker images -q stablecog/sc-worker) || true
          docker system prune -f || true
